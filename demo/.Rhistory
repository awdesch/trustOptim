_HiStOrY_V2_
source("choice_dense.R")
source("choice_dense.R")
ls()
trust.optim
get.f
q()
library(trustOptimDevel)
demo(choice_sparse)
q()
library(trustOptimDevel)
getwd()
source("choice_dense)
source("choice_dense.R")
demo(choice_dense)
demo(choice_sparse)
source("choice_sparse.R")
source("choice_sparse.R")
getwd()
source("choice_sparse.R")
source("choice_sparse.R")
N
k
n
debug(get.hess.struct)
source("choice_sparse.R")
c
n
str(B2)
n
traceback()
source("choice_sparse.R")
c
n
str(B2)
Matrix:::t(B2)
B2
class(B2)
t(B2)
str(b1)
str(B1)
methods(kronecker)
methods(print)
methods(kronecker)
kronecker
?kronecker
Matrix:::kronecker
library(Matrix)
kronecker
Matrix:::kronecker
Q
undebug(get.hess.struct)
source("choice_sparse.R")
c
traceback()
?library
detach(trustOptimDevel)
detach("trustOptimDevel")
q()
library(trustOptimDevel)
source("choice_sparse.R")
source("choice_dense.R")
q()
library(trustOptimDevel)
source("choice_sparse.R")
source("choice_dense.R")
q()
library(trustOptimDevel)
source("choice_sparse.R")
get.grad(start,Y,X,inv.Omega,\040inv.Sigma)
g1=get.grad(start,Y,X,inv.Omega,\040inv.Sigma)
library(numDeriv)
source("choice_sparse.R")
opt2
str(opt2)
source("choice_sparse.R")
g1=get.grad(start,Y,X,inv.Sigma,\040inv.Omega,\040T=T)
g1
g2=grad(get.f,start,Y=Y,X=X,inv.Omega=inv.Omega,T=T)
g2=grad(get.f,start,Y=Y,X=X,inv.Omega=inv.Omega,inv.Sigma=inv.Sigma,T=T)
cbind(g1,g2)
g1=get.grad(start,Y,X,inv.Omega,\040inv.Sigma,\040T=T)
cbind(g1,g2)
all.equal(g1,g2)
q()
source("choice_sparse.R")
demo("choice_sparse.R")
demo(choice_sparse)
library(trustOptimDevel)
source("choice_sparse.R")
source("choice_sparse.R")
source("choice_sparse.R")
source("choice_sparse.R")
source("choice_sparse.R")
q()
library(trustOptimDevel)
source("choice_sparse.R")
opt
opt2
str(opt2)
source("choice_sparse.R")
str(opt2)
opt2$solution
library(numDeriv)
g1=get.grad(start,Y,X,inv.Omega,\040inv.Sigma,\040T=T)
g2=grad(get.f,start,Y=Y,X=X,inv.Omega=inv.Omega,inv.Sigma=inv.Sigma,T=T)
all.equal(g1,g2)
sol
sol=opt2$solution
g1=get.grad(sol,Y,X,inv.Omega,\040inv.Sigma,\040T=T)
g2=grad(get.f,sol,Y=Y,X=X,inv.Omega=inv.Omega,inv.Sigma=inv.Sigma,T=T)
getwd()
source("../R/binaryChoice_funcs.R")
source("choice_sparse.R")
source("choice_sparse.R")
q()
library(trustOptimDevel)
source("choice_sparse.R")
Q
source("../R/binaryChoice_funcs.R")
source("choice_sparse.R")
q()
ls()
library()
sessionInfo()
source("choice_sparse.R")
library(trustOptimDevel)
source("choice_sparse.R")
Q
source("../R/binaryChoice_funcs.R")
source("choice_sparse.R")
q()
library(trustOptimDevel)
get.f
get.grad
ls()
get.hess.struct
source("../R/binaryChoice_funcs.R")
get.grad
get.f
q()
library(trustOptimDevel)
source("choice_sparse.R")
demo(choice_sparse)
demo(choice_dense)
q()
source("choice_dense.R")
source("choice_dense.R")
source("choice_dense.R")
source("choice_dense.R")
source("choice_dense.R")
?system.time
dd\040<-\040system.time(print("x"))
dd
str(dd)
?difftime
dd\040<-\040difftime(Sys.time(),Sys.time())
dd
str(dd)
dd\040<-\040system.time(print("x"))
dd
str(dd)
q()
n
rm(list=ls())
sessionInfo()
source("choice_sparse.R")
source("choice_sparse.R")
q()
sessionInfo()
source("choice_dense.R")
q()
source("choice_dense.R")
source("choice_dense.R")
source("choice_dense.R")
source("choice_dense.R")
q()
source("choice_dense.R")
source("choice_dense.R")
q()
